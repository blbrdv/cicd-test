name: 'Test'

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:

  build:
    runs-on: windows-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: |
          $Data = Get-Content -Raw '.\.github\matrix.json' | ConvertFrom-Json;
          $Include = @();
          
          foreach ( $Target in $Data.targets ) {
            foreach ( $Os in $Data.os ) {
              if ( $Target.label -eq $Os.label ) {
                $Include += @{
                  label = $Os.label
                  name = $Os.name
                  scenario = $Target.scenario
                };
              }
            }
          }
          
          foreach ( $Install in $Data.install ) {
            foreach ( $Os in $Data.os ) {
              $Include += @{
                label = $Os.label
                name = $Os.name
                scenario = "install"
                id = $Install.id
              }; 
            }
          }
          
          $Matrix = @{ include = $Include } | ConvertTo-JSON;
          
          $MatrixJSON = $Include | ConvertTo-JSON;
          echo $MatrixJSON;
          
          $JSON = 'matrix=$MatrixJSON';
          echo $JSON;
          echo $JSON | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8;

  test:
    needs: build

    strategy:
      matrix: ${{ fromJson( needs.build.outputs.matrix ) }}

    runs-on: ${{ matrix.label }}

    name: "'${{ matrix.scenario }}' on ${{ matrix.name }}"

    steps:
      - run: echo "${{ matrix.scenario }} ${{ matrix.id }}"
