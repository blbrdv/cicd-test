name: 'Test'

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:

  build:
    runs-on: windows-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - id: set-matrix
        run: |
          $Data = Get-Content -Raw '.\.github\matrix.json' | ConvertFrom-Json;
          $Include = @();
          $Targets = $Data.os;
          foreach ( $Target in $Data.include ) {
            echo $Target;

            if ( $null -eq $Target['label'] ) {
          
              foreach ( $Os in $Targets ) {
                $Include += @{
                  label = $Os.label
                  name = $Os.name
                  scenario = $Target.scenario
                  id = $Target.id
                };
              }

            }
            else 
            {
              $Name = "";
          
              foreach ( $Os in $Targets ) {
                if ( $Os.label -eq $Target.label ) {
                  $Name = $Os.name;
                  break;
                }
              }
          
              $Include += @{
                label = $Target.label
                name = $Name
                scenario = $Target.scenario
              };
            }
          }
          
          $IncludeJSON = $Include | ConvertTo-JSON;
          echo $IncludeJSON;
          
          $JSON = 'matrix={"include": $IncludeJSON}';
          echo $JSON;
          echo $JSON | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8;

  test:
    needs: build

    strategy:
      matrix: ${{ fromJson( needs.build.outputs.matrix ) }}

    runs-on: ${{ matrix.label }}

    name: "'${{ matrix.scenario }}' on ${{ matrix.name }}"

    steps:
      - run: echo "${{ matrix.scenario }} ${{ matrix.id }}"
