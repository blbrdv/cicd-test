name: 'Test'

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'blbrdv/ezstore'
          ref: 'debug'
          fetch-depth: 0

      - name: Setup GO
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Build project
        run: .\run.ps1 build

      - name: Upload app
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: output

  generation:
    runs-on: windows-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - name: Generating matrix
        id: set-matrix
        run: |
          $Data = Get-Content -Raw '.\.github\matrix.json' | ConvertFrom-Json;
          $Include = @();
          
          foreach ( $Target in $Data.targets ) {
            foreach ( $Os in $Data.os ) {
              if ( $Target.label -eq $Os.label ) {
                $Include += @{
                  label = $Os.label
                  name = "'$($Target.scenario)'on $($Os.name)"
                  run = ".\tests\$($Target.scenario).ps1"
                };
              }
            }
          }
          
          foreach ( $Install in $Data.install ) {
            foreach ( $Os in $Data.os ) {
              $Include += @{
                label = $Os.label
                name = "'$($Install.id)'on $($Os.name)"
                run = ".\tests\install.ps1 $($Install.id)"
              }; 
            }
          }
          
          $Matrix = (@{ include = $Include } | ConvertTo-JSON) -replace '\n';
          $JSON = "matrix=$Matrix";
          
          echo $JSON;
          echo $JSON | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8;

  test:
    needs: [build, generation]

    strategy:
      fail-fast: false
      matrix: ${{ fromJson( needs.generation.outputs.matrix ) }}

    runs-on: ${{ matrix.label }}

    name: ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v4

      - name: Download app
        uses: actions/download-artifact@v4
        with:
          name: build
          path: output

      - name: Running scenario
        run: ${{ matrix.run }}
